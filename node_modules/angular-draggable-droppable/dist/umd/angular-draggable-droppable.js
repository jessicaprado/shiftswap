(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("@angular/core"), require("rxjs/Subject"), require("rxjs/Observable"), require("rxjs/add/observable/merge"), require("rxjs/add/operator/map"), require("rxjs/add/operator/mergeMap"), require("rxjs/add/operator/takeUntil"), require("rxjs/add/operator/take"), require("rxjs/add/operator/takeLast"), require("rxjs/add/operator/pairwise"), require("rxjs/add/operator/share"), require("rxjs/add/operator/distinctUntilChanged"), require("rxjs/add/operator/filter"));
	else if(typeof define === 'function' && define.amd)
		define(["@angular/core", "rxjs/Subject", "rxjs/Observable", "rxjs/add/observable/merge", "rxjs/add/operator/map", "rxjs/add/operator/mergeMap", "rxjs/add/operator/takeUntil", "rxjs/add/operator/take", "rxjs/add/operator/takeLast", "rxjs/add/operator/pairwise", "rxjs/add/operator/share", "rxjs/add/operator/distinctUntilChanged", "rxjs/add/operator/filter"], factory);
	else if(typeof exports === 'object')
		exports["angularDraggableDroppable"] = factory(require("@angular/core"), require("rxjs/Subject"), require("rxjs/Observable"), require("rxjs/add/observable/merge"), require("rxjs/add/operator/map"), require("rxjs/add/operator/mergeMap"), require("rxjs/add/operator/takeUntil"), require("rxjs/add/operator/take"), require("rxjs/add/operator/takeLast"), require("rxjs/add/operator/pairwise"), require("rxjs/add/operator/share"), require("rxjs/add/operator/distinctUntilChanged"), require("rxjs/add/operator/filter"));
	else
		root["angularDraggableDroppable"] = factory(root["ng"]["core"], root["rx"]["Subject"], root["rx"]["Observable"], root["rx"]["Observable"]["merge"], root["rx"]["Observable"], root["rx"]["Observable"], root["rx"]["Observable"], root["rx"]["Observable"], root["rx"]["Observable"], root["rx"]["Observable"], root["rx"]["Observable"], root["rx"]["Observable"], root["rx"]["Observable"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_11__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_16__, __WEBPACK_EXTERNAL_MODULE_17__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(1));
	__export(__webpack_require__(14));


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var draggable_directive_1 = __webpack_require__(3);
	var droppable_directive_1 = __webpack_require__(15);
	var draggableHelper_provider_1 = __webpack_require__(14);
	var DragAndDropModule = (function () {
	    function DragAndDropModule() {
	    }
	    DragAndDropModule.forRoot = function () {
	        return {
	            ngModule: DragAndDropModule,
	            providers: [
	                draggableHelper_provider_1.DraggableHelper
	            ]
	        };
	    };
	    DragAndDropModule = __decorate([
	        core_1.NgModule({
	            declarations: [
	                draggable_directive_1.Draggable,
	                droppable_directive_1.Droppable
	            ],
	            exports: [
	                draggable_directive_1.Draggable,
	                droppable_directive_1.Droppable
	            ]
	        }), 
	        __metadata('design:paramtypes', [])
	    ], DragAndDropModule);
	    return DragAndDropModule;
	}());
	exports.DragAndDropModule = DragAndDropModule;


/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	var Subject_1 = __webpack_require__(4);
	var Observable_1 = __webpack_require__(5);
	__webpack_require__(6);
	__webpack_require__(7);
	__webpack_require__(8);
	__webpack_require__(9);
	__webpack_require__(10);
	__webpack_require__(11);
	__webpack_require__(12);
	__webpack_require__(13);
	var draggableHelper_provider_1 = __webpack_require__(14);
	var MOVE_CURSOR = 'move';
	var Draggable = (function () {
	    /**
	     * @hidden
	     */
	    function Draggable(element, renderer, draggableHelper, zone) {
	        this.element = element;
	        this.renderer = renderer;
	        this.draggableHelper = draggableHelper;
	        this.zone = zone;
	        this.dragAxis = { x: true, y: true };
	        this.dragSnapGrid = {};
	        this.ghostDragEnabled = true;
	        this.dragStart = new core_1.EventEmitter();
	        this.dragging = new core_1.EventEmitter();
	        this.dragEnd = new core_1.EventEmitter();
	        /**
	         * @hidden
	         */
	        this.mouseDown = new Subject_1.Subject();
	        /**
	         * @hidden
	         */
	        this.mouseMove = new Subject_1.Subject();
	        /**
	         * @hidden
	         */
	        this.mouseUp = new Subject_1.Subject();
	        this.eventListenerSubscriptions = {};
	    }
	    Draggable.prototype.ngOnInit = function () {
	        var _this = this;
	        this.checkEventListeners();
	        var mouseDrag = this.mouseDown
	            .filter(function () { return _this.canDrag(); })
	            .flatMap(function (mouseDownEvent) {
	            _this.zone.run(function () {
	                _this.dragStart.next({ x: 0, y: 0 });
	            });
	            _this.setCursor(MOVE_CURSOR);
	            var currentDrag = new Subject_1.Subject();
	            _this.draggableHelper.currentDrag.next(currentDrag);
	            var mouseMove = _this.mouseMove
	                .map(function (mouseMoveEvent) {
	                mouseMoveEvent.preventDefault();
	                return {
	                    currentDrag: currentDrag,
	                    x: mouseMoveEvent.clientX - mouseDownEvent.clientX,
	                    y: mouseMoveEvent.clientY - mouseDownEvent.clientY,
	                    clientX: mouseMoveEvent.clientX,
	                    clientY: mouseMoveEvent.clientY
	                };
	            })
	                .map(function (moveData) {
	                if (_this.dragSnapGrid.x) {
	                    moveData.x = Math.floor(moveData.x / _this.dragSnapGrid.x) * _this.dragSnapGrid.x;
	                }
	                if (_this.dragSnapGrid.y) {
	                    moveData.y = Math.floor(moveData.y / _this.dragSnapGrid.y) * _this.dragSnapGrid.y;
	                }
	                return moveData;
	            })
	                .map(function (moveData) {
	                if (!_this.dragAxis.x) {
	                    moveData.x = 0;
	                }
	                if (!_this.dragAxis.y) {
	                    moveData.y = 0;
	                }
	                return moveData;
	            })
	                .filter(function (_a) {
	                var x = _a.x, y = _a.y;
	                return !_this.validateDrag || _this.validateDrag({ x: x, y: y });
	            })
	                .takeUntil(Observable_1.Observable.merge(_this.mouseUp, _this.mouseDown));
	            mouseMove.takeLast(1).subscribe(function (_a) {
	                var x = _a.x, y = _a.y;
	                _this.zone.run(function () {
	                    _this.dragEnd.next({ x: x, y: y });
	                });
	                currentDrag.complete();
	                _this.setCssTransform(null);
	                if (_this.ghostDragEnabled) {
	                    _this.renderer.setElementStyle(_this.element.nativeElement, 'pointerEvents', null);
	                }
	            });
	            return mouseMove;
	        })
	            .share();
	        Observable_1.Observable
	            .merge(mouseDrag.take(1).map(function (value) { return [, value]; }), mouseDrag.pairwise())
	            .filter(function (_a) {
	            var previous = _a[0], next = _a[1];
	            if (!previous) {
	                return true;
	            }
	            return previous.x !== next.x || previous.y !== next.y;
	        })
	            .map(function (_a) {
	            var previous = _a[0], next = _a[1];
	            return next;
	        })
	            .subscribe(function (_a) {
	            var x = _a.x, y = _a.y, currentDrag = _a.currentDrag, clientX = _a.clientX, clientY = _a.clientY;
	            _this.zone.run(function () {
	                _this.dragging.next({ x: x, y: y });
	            });
	            if (_this.ghostDragEnabled) {
	                _this.renderer.setElementStyle(_this.element.nativeElement, 'pointerEvents', 'none');
	            }
	            _this.setCssTransform("translate(" + x + "px, " + y + "px)");
	            currentDrag.next({
	                clientX: clientX,
	                clientY: clientY,
	                dropData: _this.dropData
	            });
	        });
	    };
	    Draggable.prototype.ngOnChanges = function (changes) {
	        if (changes['dragAxis']) {
	            this.checkEventListeners();
	        }
	    };
	    Draggable.prototype.ngOnDestroy = function () {
	        this.unsubscribeEventListeners();
	        this.mouseDown.complete();
	        this.mouseMove.complete();
	        this.mouseUp.complete();
	    };
	    Draggable.prototype.checkEventListeners = function () {
	        var _this = this;
	        var canDrag = this.canDrag();
	        var hasEventListeners = Object.keys(this.eventListenerSubscriptions).length > 0;
	        if (canDrag && !hasEventListeners) {
	            this.zone.runOutsideAngular(function () {
	                _this.eventListenerSubscriptions.mousedown = _this.renderer.listen(_this.element.nativeElement, 'mousedown', function (event) {
	                    _this.onMouseDown(event);
	                });
	                _this.eventListenerSubscriptions.mouseup = _this.renderer.listenGlobal('document', 'mouseup', function (event) {
	                    _this.onMouseUp(event);
	                });
	                _this.eventListenerSubscriptions.mouseenter = _this.renderer.listen(_this.element.nativeElement, 'mouseenter', function () {
	                    _this.onMouseEnter();
	                });
	                _this.eventListenerSubscriptions.mouseleave = _this.renderer.listen(_this.element.nativeElement, 'mouseleave', function () {
	                    _this.onMouseLeave();
	                });
	            });
	        }
	        else if (!canDrag && hasEventListeners) {
	            this.unsubscribeEventListeners();
	        }
	    };
	    Draggable.prototype.onMouseDown = function (event) {
	        var _this = this;
	        if (!this.eventListenerSubscriptions.mousemove) {
	            this.eventListenerSubscriptions.mousemove = this.renderer.listenGlobal('document', 'mousemove', function (event) {
	                _this.mouseMove.next(event);
	            });
	        }
	        this.mouseDown.next(event);
	    };
	    Draggable.prototype.onMouseUp = function (event) {
	        if (this.eventListenerSubscriptions.mousemove) {
	            this.eventListenerSubscriptions.mousemove();
	            delete this.eventListenerSubscriptions.mousemove;
	        }
	        this.mouseUp.next(event);
	    };
	    Draggable.prototype.onMouseEnter = function () {
	        this.setCursor(MOVE_CURSOR);
	    };
	    Draggable.prototype.onMouseLeave = function () {
	        this.setCursor(null);
	    };
	    Draggable.prototype.setCssTransform = function (value) {
	        if (this.ghostDragEnabled) {
	            this.renderer.setElementStyle(this.element.nativeElement, 'transform', value);
	            this.renderer.setElementStyle(this.element.nativeElement, '-webkit-transform', value);
	            this.renderer.setElementStyle(this.element.nativeElement, '-ms-transform', value);
	            this.renderer.setElementStyle(this.element.nativeElement, '-moz-transform', value);
	            this.renderer.setElementStyle(this.element.nativeElement, '-o-transform', value);
	        }
	    };
	    Draggable.prototype.canDrag = function () {
	        return this.dragAxis.x || this.dragAxis.y;
	    };
	    Draggable.prototype.setCursor = function (value) {
	        this.renderer.setElementStyle(this.element.nativeElement, 'cursor', value);
	    };
	    Draggable.prototype.unsubscribeEventListeners = function () {
	        var _this = this;
	        Object.keys(this.eventListenerSubscriptions).forEach(function (type) {
	            _this.eventListenerSubscriptions[type]();
	            delete _this.eventListenerSubscriptions[type];
	        });
	    };
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], Draggable.prototype, "dropData", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], Draggable.prototype, "dragAxis", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Object)
	    ], Draggable.prototype, "dragSnapGrid", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Boolean)
	    ], Draggable.prototype, "ghostDragEnabled", void 0);
	    __decorate([
	        core_1.Input(), 
	        __metadata('design:type', Function)
	    ], Draggable.prototype, "validateDrag", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], Draggable.prototype, "dragStart", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], Draggable.prototype, "dragging", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], Draggable.prototype, "dragEnd", void 0);
	    Draggable = __decorate([
	        core_1.Directive({
	            selector: '[mwlDraggable]'
	        }), 
	        __metadata('design:paramtypes', [core_1.ElementRef, core_1.Renderer, draggableHelper_provider_1.DraggableHelper, core_1.NgZone])
	    ], Draggable);
	    return Draggable;
	}());
	exports.Draggable = Draggable;


/***/ },
/* 4 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_4__;

/***/ },
/* 5 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_5__;

/***/ },
/* 6 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_6__;

/***/ },
/* 7 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_7__;

/***/ },
/* 8 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_8__;

/***/ },
/* 9 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_9__;

/***/ },
/* 10 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_10__;

/***/ },
/* 11 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_11__;

/***/ },
/* 12 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_12__;

/***/ },
/* 13 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_13__;

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Subject_1 = __webpack_require__(4);
	var DraggableHelper = (function () {
	    function DraggableHelper() {
	        this.currentDrag = new Subject_1.Subject();
	    }
	    return DraggableHelper;
	}());
	exports.DraggableHelper = DraggableHelper;


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var __metadata = (this && this.__metadata) || function (k, v) {
	    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
	};
	var core_1 = __webpack_require__(2);
	__webpack_require__(16);
	__webpack_require__(12);
	__webpack_require__(17);
	var draggableHelper_provider_1 = __webpack_require__(14);
	function isCoordinateWithinRectangle(clientX, clientY, rect) {
	    return clientX >= rect.left && clientX <= rect.right && clientY >= rect.top && clientY <= rect.bottom;
	}
	var Droppable = (function () {
	    function Droppable(element, draggableHelper, zone) {
	        this.element = element;
	        this.draggableHelper = draggableHelper;
	        this.zone = zone;
	        this.dragEnter = new core_1.EventEmitter();
	        this.dragLeave = new core_1.EventEmitter();
	        this.dragOver = new core_1.EventEmitter();
	        this.drop = new core_1.EventEmitter();
	    }
	    Droppable.prototype.ngOnInit = function () {
	        var _this = this;
	        this.currentDragSubscription = this.draggableHelper.currentDrag.subscribe(function (drag) {
	            var droppableRectangle = _this.element.nativeElement.getBoundingClientRect();
	            var currentDragDropData;
	            var overlaps = drag.map(function (_a) {
	                var clientX = _a.clientX, clientY = _a.clientY, dropData = _a.dropData;
	                currentDragDropData = dropData;
	                return isCoordinateWithinRectangle(clientX, clientY, droppableRectangle);
	            });
	            var overlapsChanged = overlaps.distinctUntilChanged();
	            var dragOverActive; // TODO - see if there's a way of doing this via rxjs
	            overlapsChanged.filter(function (overlapsNow) { return overlapsNow; }).subscribe(function () {
	                dragOverActive = true;
	                _this.zone.run(function () {
	                    _this.dragEnter.next({
	                        dropData: currentDragDropData
	                    });
	                });
	            });
	            overlaps.filter(function (overlapsNow) { return overlapsNow; }).subscribe(function () {
	                _this.zone.run(function () {
	                    _this.dragOver.next({
	                        dropData: currentDragDropData
	                    });
	                });
	            });
	            overlapsChanged
	                .pairwise()
	                .filter(function (_a) {
	                var didOverlap = _a[0], overlapsNow = _a[1];
	                return didOverlap && !overlapsNow;
	            })
	                .subscribe(function () {
	                dragOverActive = false;
	                _this.zone.run(function () {
	                    _this.dragLeave.next({
	                        dropData: currentDragDropData
	                    });
	                });
	            });
	            drag.flatMap(function () { return overlaps; }).subscribe({
	                complete: function () {
	                    if (dragOverActive) {
	                        _this.zone.run(function () {
	                            _this.drop.next({
	                                dropData: currentDragDropData
	                            });
	                        });
	                    }
	                }
	            });
	        });
	    };
	    Droppable.prototype.ngOnDestroy = function () {
	        this.currentDragSubscription.unsubscribe();
	    };
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], Droppable.prototype, "dragEnter", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], Droppable.prototype, "dragLeave", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], Droppable.prototype, "dragOver", void 0);
	    __decorate([
	        core_1.Output(), 
	        __metadata('design:type', core_1.EventEmitter)
	    ], Droppable.prototype, "drop", void 0);
	    Droppable = __decorate([
	        core_1.Directive({
	            selector: '[mwlDroppable]'
	        }), 
	        __metadata('design:paramtypes', [core_1.ElementRef, draggableHelper_provider_1.DraggableHelper, core_1.NgZone])
	    ], Droppable);
	    return Droppable;
	}());
	exports.Droppable = Droppable;


/***/ },
/* 16 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_16__;

/***/ },
/* 17 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_17__;

/***/ }
/******/ ])
});
;
//# sourceMappingURL=angular-draggable-droppable.js.map